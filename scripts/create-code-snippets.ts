import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

import { getFunctionToString } from './getFunctionToString';

// Manually define __dirname for ES modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Path to the source TSX file
const inputFilePath = path.resolve(
  __dirname,
  '../src/code-snippets/example-components.tsx'
);

// Path to the output TypeScript file
const outputFilePath = path.resolve(
  __dirname,
  '../src/code-snippets/code-strings.ts'
);

// List of functions to extract
const functionNames = ['SingleItem', 'ManyItems'];

// Extract and store functions
const extractedFunctions: Record<string, string | null> = {};
functionNames.forEach(name => {
  extractedFunctions[name] = getFunctionToString(inputFilePath, name);
});

// Format the extracted functions as TypeScript exports
const outputContent = `
// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

export const SingleItemCode = \`${extractedFunctions['SingleItem'] ?? '// Function not found'}\`;

export const ManyItemsCode = \`${extractedFunctions['ManyItems'] ?? '// Function not found'}\`;
`;

// Write to the output file
fs.writeFileSync(outputFilePath, outputContent.trim(), 'utf-8');

console.log(`Extracted functions saved to ${outputFilePath}`);
